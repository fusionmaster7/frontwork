{"version":3,"sources":["components/SideDrawer/DrawerToggleButton.js","components/Toolbar/toolbar.js","components/SideDrawer/SideDrawer.js","components/Backdrop/Backdrop.js","containers/HomePage/Cards.js","containers/HomePage/HomePage.js","components/Form/Form.js","App.js","serviceWorker.js","index.js"],"names":["drawerToggleButton","props","className","onClick","click","Toolbar","drawerToggler","href","sideDrawer","sideDrawerClass","show","join","backDrop","useStyles","makeStyles","theme","root","maxWidth","backgroundColor","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","HomeCard","classes","Card","style","margin","CardHeader","Avatar","aria-label","action","IconButton","title","subheader","CardMedia","image","CardContent","Typography","variant","color","component","CardActions","disableSpacing","clsx","aria-expanded","HomePage","Paper","padding","Grid","container","justifyContent","React","Component","initialValues","id","fullname","email","mobile","options","city","gender","dob","Date","isUser","form","useState","values","setValues","handleInputChange","e","target","name","value","autoComplete","item","xs","label","onChange","width","validators","errorMessages","FormControl","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","Select","placeholder","MenuItem","maxlength","minlength","Checkbox","TextareaAutosize","cols","rows","border","borderRadius","resize","Button","size","type","App","state","sideDrawerOpen","drawerToggleHandler","setState","prevState","this","exact","path","Form","Home","Boolean","window","location","hostname","match","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7fa42b4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './DrawerToggleButton.css';\r\n\r\nconst drawerToggleButton=props=>(\r\n    <button className=\"toggle_button\" onClick={props.click}>\r\n        <div className=\"toggle-button_line\"></div>\r\n        <div className=\"toggle-button_line\"></div>\r\n        <div className=\"toggle-button_line\"></div>\r\n    </button>\r\n)\r\n\r\nexport default drawerToggleButton;","import React from 'react';\r\nimport DrawerToggleButton from '../SideDrawer/DrawerToggleButton';\r\nimport './toolbar.css';\r\n\r\nconst Toolbar=(props)=>{\r\n    \r\n    return(\r\n        <header className=\"toolbar\">\r\n            <nav className=\"toolbar_navigation\">\r\n                <div><DrawerToggleButton click={props.drawerToggler}/></div>\r\n                <div className=\"toolbar_logo\"><a href=\"/\">THE LOGO</a></div>\r\n                <div className=\"space\"></div>\r\n                <div className=\"toolbar_navigation-items\">\r\n                    <ul>\r\n                        <li className=\"navigation_item_op\"><a href=\"/\">Option 1</a></li>\r\n                        <li className=\"navigation_item_op\"><a href=\"/\">Option 2</a></li>\r\n                        <li><a href=\"/\">Log In</a></li>\r\n                        <li><button className=\"signup_button\"><a href=\"/form\">Sign Up</a></button></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport \"./SideDrawer.css\";\r\n\r\nconst sideDrawer=props=>{\r\n    let sideDrawerClass=[\"side_drawer\"];\r\n    if(props.show){\r\n        sideDrawerClass=[\"side_drawer\",\"open\"]\r\n    }\r\n    return(\r\n        <nav className={sideDrawerClass.join(\" \")} onClick={props.click}>\r\n            <ul>\r\n                <li><a href=\"/\">Option 1</a></li>\r\n                <li><a href=\"/\">Option 2</a></li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React from 'react';\r\nimport './BackDrop.css';\r\n\r\nconst backDrop=props=>{\r\n    return(\r\n        <div className=\"backdrop\" onClick={props.drawerToggler}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default backDrop;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './HomePage.css'\r\nimport {Card,CardMedia,CardContent,Typography,CardActions,CardHeader,Avatar,IconButton} from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 345,\r\n      backgroundColor:\"#D8F2F3\",\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: 'orange',\r\n    },\r\n  }));\r\n  \r\n  export default function HomeCard() {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <Card className={classes.root} style={{margin:\"18px\"}}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n              R\r\n            </Avatar>\r\n          }\r\n          action={\r\n            <IconButton aria-label=\"settings\">\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          }\r\n          title=\"Shrimp and Chorizo Paella\"\r\n          subheader=\"September 14, 2016\"\r\n        />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://placekitten.com/640/360\"\r\n          title=\"Paella dish\"\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"black\" component=\"p\">\r\n            This impressive paella is a perfect party dish and a fun meal to cook together with your\r\n            guests. Add 1 cup of frozen peas along with the mussels, if you like.\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <IconButton aria-label=\"add to favorites\">\r\n            <FavoriteIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"share\">\r\n            <ShareIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            className={clsx(classes.expand)}\r\n            aria-expanded={true}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }","import React from 'react';\r\nimport Card from './Cards';\r\nimport {Paper,Grid} from '@material-ui/core';\r\n\r\n\r\n\r\nclass HomePage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div >\r\n                <Paper style={{margin:\"80px\",padding:\"24px\"}}>\r\n                    <Grid container style={{justifyContent:\"space-around\"}}>\r\n                        <Card/> \r\n                        <Card/>\r\n                        <Card/>\r\n                        <Card/>\r\n                        <Card/>\r\n                        <Card/>\r\n                        <Card/>\r\n                    </Grid>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState } from 'react';\r\nimport { Grid,Paper, FormControl, FormLabel, RadioGroup ,FormControlLabel,Radio, Select, MenuItem,Checkbox,TextareaAutosize,Button} from '@material-ui/core';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport './Form.css';\r\n\r\n\r\n// 1) Default Values of Each Field \r\nconst initialValues={\r\n    id:0,\r\n    fullname:\"\",\r\n    email:\"\",\r\n    mobile:\"+91\",\r\n    options:\"\",\r\n    city:\"\",\r\n    gender:\"male\",\r\n    dob:new Date(),\r\n    isUser:false,\r\n}\r\n\r\n\r\n\r\nconst form=props=>{\r\n    // Using Hook To Create an array of values and defining a functions to update values\r\n    const [values,setValues]=useState(initialValues);\r\n\r\n    const handleInputChange=e=>{\r\n        const {name,value}=e.target\r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        })\r\n    }\r\n    \r\n    return(\r\n        <Paper style={{margin:\"80px\",padding:\"24px\"}}>\r\n            <ValidatorForm autoComplete=\"off\">\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                        <TextValidator\r\n                        variant=\"outlined\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullname}\r\n                        name=\"fullname\"\r\n                        onChange={handleInputChange}\r\n                        style={{width:'80%' ,margin:'8px'}}\r\n                        validators={['required']}\r\n                        errorMessages={['Please provide your full name here']}\r\n                        />\r\n                        <TextValidator\r\n                        variant=\"outlined\"\r\n                        label=\"E-Mail\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        style={{width:'80%' ,margin:'8px'}}\r\n                        validators={['required','isEmail']}\r\n                        errorMessages={['Please provide a valid E-mail']}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Gender</FormLabel>\r\n                            <RadioGroup \r\n                            row\r\n                            name=\"gender\"\r\n                            value={values.gender}\r\n                            onChange={handleInputChange}\r\n                            >\r\n                                <FormControlLabel value=\"male\" control={<Radio/>} label=\"Male\" />\r\n                                <FormControlLabel value=\"female\" control={<Radio/>} label=\"Female\" />\r\n                                <FormControlLabel value=\"other\" control={<Radio/>} label=\"Other\" />\r\n                            </RadioGroup>\r\n                            <br/>\r\n                            <Select\r\n                            variant=\"outlined\"\r\n                            name=\"options\"\r\n                            placeholder=\"Options\"\r\n                            value={values.options}\r\n                            onChange={handleInputChange}\r\n                            color=\"primary\"\r\n                            >   \r\n                                \r\n                                <MenuItem value=\"None\">None</MenuItem>\r\n                                <MenuItem value=\"Option 1\">Option 1</MenuItem>\r\n                                <MenuItem value=\"Option 2\">Option 2</MenuItem>\r\n                                <MenuItem value=\"Option 3\">Option 3</MenuItem>\r\n                                <MenuItem value=\"Option 4\">Option 4</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextValidator\r\n                            variant=\"outlined\"\r\n                            label=\"Mobile No.\"\r\n                            name=\"mobile\"\r\n                            value={values.mobile}\r\n                            placeholder=\"+91\"\r\n                            onChange={handleInputChange}\r\n                            validators={['required','isMobile']}\r\n                            errorMessages={['Please provide a valid E-mail']}\r\n                            style={{width:'80%' ,margin:'8px'}}\r\n                            maxlength={12}\r\n                            minlength={12}\r\n                            />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FormControl>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            name=\"isUser\"\r\n                                            color=\"primary\"\r\n                                            value={values.isUser}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Are You An Indian\"\r\n                                />\r\n                            </FormControl>\r\n                    </Grid>\r\n                    <Grid container style={{justifyContent:\"space-around\",margin:\"10px\"}}>\r\n                        <TextareaAutosize \r\n                        color=\"primary\" \r\n                        variant=\"outlined\" \r\n                        cols={190} \r\n                        rows={15} \r\n                        placeholder=\"Your Message\"\r\n                        style={{border:\"1px solid #D0D0D0\",borderRadius:\"0.5rem\",resize:\"none\"}}/>\r\n                    </Grid>\r\n                   \r\n                    <Grid item xs={3}>\r\n                    <br/>\r\n                    <br/>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </ValidatorForm>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default form;","import React from 'react';\nimport './App.css';\nimport {Route,Switch} from 'react-router-dom';\nimport Toolbar from './components/Toolbar/toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport BackDrop from \"./components/Backdrop/Backdrop\";\nimport Home from \"./containers/HomePage/HomePage\";\nimport Form from \"./components/Form/Form\";\n\n\nclass App extends React.Component{\n    state={\n        sideDrawerOpen:false\n    };\n\n    drawerToggleHandler=()=>{\n        this.setState((prevState)=>{\n            return{sideDrawerOpen:!prevState.sideDrawerOpen};\n        });\n    };\n\n  render(){\n      \n      let backDrop;\n      if(this.state.sideDrawerOpen){\n          backDrop=<BackDrop drawerToggler={this.drawerToggleHandler}/>\n      }\n      \n        return (\n             <div className=\"App\" style={{height:\"100%\"}}>\n                <Toolbar drawerToggler={this.drawerToggleHandler}/>\n                <SideDrawer show={this.state.sideDrawerOpen}/>\n                {backDrop}\n                <main className='main_content'>\n                    <Switch>\n                        <Route exact path={'/form'} component={Form}></Route>\n                        <Route path={'/'} component={Home}></Route>\n                    </Switch>\n                </main>\n            </div> \n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nconst app=(\n    <BrowserRouter basename={'http://frontwork.surge.sh'}>\n        <App/>\n    </BrowserRouter>\n);\nReactDOM.render(app , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}